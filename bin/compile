#!/bin/bash

set -e

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

APP_BRANCH=$(cat $BUILD_DIR/.moteef_branch)
APP_INSTANCE=$(cat $ENV_DIR/APP_INSTANCE)
GIT_URL=$(cat $ENV_DIR/MOTEEF_REPO_URL)
rm $BUILD_DIR/.moteef_branch

echo "-----> installing deploy key"
if [ ! -d ~/.ssh ]; then
  mkdir -p ~/.ssh
  chmod 700 ~/.ssh
fi

cat $ENV_DIR/GIT_DEPLOY_KEY | base64 --decode > ~/.ssh/deploy_key
chmod 400 ~/.ssh/deploy_key
echo -e "Host github.com\n"\
    " IdentityFile ~/.ssh/deploy_key\n"\
    " IdentitiesOnly yes\n"\
    " UserKnownHostsFile=/dev/null\n"\
    " StrictHostKeyChecking no"\
    > ~/.ssh/config

echo "-----> ssh key installed"

INSTANCE_DIR=$BUILD_DIR/$APP_INSTANCE

rm -rf $INSTANCE_DIR
mkdir -p $INSTANCE_DIR

echo "-----> moving instance repo to instance dir"
cd $BUILD_DIR
ls | grep -v $APP_INSTANCE | xargs mv -t $APP_INSTANCE 2>&1 | indent
cd -

echo "-----> cloning Moteef app repo branch: $APP_BRANCH"
git clone -b $APP_BRANCH --single-branch $GIT_URL $BUILD_DIR/app.tmp 2>&1 | indent
echo "done clonning" | indent
rm -rf $BUILD_DIR/app.tmp/$APP_INSTANCE
shopt -s dotglob
mv $BUILD_DIR/app.tmp/* $BUILD_DIR
shopt -u dotglob
rm -rf $BUILD_DIR/app.tmp
rm -rf $BUILD_DIR/.git
echo "-----> merged two repos"

INSTANCE_PUBLIC_DIR=$INSTANCE_DIR/public
PUBLIC_DIR=$BUILD_DIR/public

if [ -d "$INSTANCE_PUBLIC_DIR" ]; then
  echo "-----> copying files from public folder"
  cp -v -r $INSTANCE_PUBLIC_DIR/* $PUBLIC_DIR 2>&1 | indent
  echo "-----> done copying files from public folder"
fi

